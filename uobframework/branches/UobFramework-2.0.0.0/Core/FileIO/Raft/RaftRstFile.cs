using System;
using System.IO;

using UoB.Core.Structure;

namespace UoB.Core.FileIO.Raft
{
	/// <summary>
	/// Summary description for RaftRstFile.
	/// </summary>
	public class RaftRstFile
	{
		private RaftRstFile()
		{
		}

		public static void Write( string filename, PolyPeptide p, int anchorLengths )
		{
			StreamWriter rw = new StreamWriter( filename, false );

			rw.WriteLine("%RAFT RESTRAINTS FILE");
			rw.WriteLine("%VERSION 1.00");
			rw.WriteLine("#DAVE autogenerated raft restraint file");

			// example lines
			//"  9"
			//"       1       4      22       4      -100.000     9.520     5.000     0.000     5.000   1"

			int count = p.Count;

			AtomList a = new AtomList();
			AtomList b = new AtomList();

			for( int i = 0; i < anchorLengths; i++ )
			{
				a.addAtom( p[i].CAlphaAtom );
				b.addAtom( p[count-i-1].CAlphaAtom );
			}

			int rstCount = a.Count * b.Count;

			rw.WriteLine( rstCount.ToString().PadLeft(3,' ') );

			for( int i = 0; i < a.Count; i++ )
			{
				for( int j = 0; j < b.Count; j++ )
				{
					rw.Write( (a[i].parentMolecule.ArrayIndex+1).ToString().PadLeft(8,' ') );
					rw.Write("       4");
					rw.Write( (b[j].parentMolecule.ArrayIndex+1).ToString().PadLeft(8,' ') );
					rw.Write("       4");
					rw.Write("      -100.000");
					rw.Write( Atom.distanceBetween( a[i],b[j]).ToString("0.000").PadLeft(10,' '));
					rw.WriteLine("     5.000     0.000     5.000   1");
				}
			}

			rw.Close();
		}
	}
}
